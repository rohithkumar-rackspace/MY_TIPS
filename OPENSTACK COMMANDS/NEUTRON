==========================================================================================================================================================================================================
NEUTRON OPENSTACK NETWORKING:
==========================================================================================================================================================================================================
Neuton is a Networking Service that manages Environments virtual network, subnet, ipaddresses, routers, firewallrules.

1.Neutron Architecture:
-----------------------
Neutron is made up of five daemons.

1.Neutron Server: The API and primary gateway to neutron. one must interact with neutron-server to create, list, delete, and manage networks and other resources.
----------------
2.Neutron DHCP-Agent: Provides DHCP Services to DHCP-enabled Neutron subnets.Behind scenes "neutron-dhcp-agent" actually uses "dnsmasq".
----------------------
3.Neutron-L3-Agent: Creates Neutron routers.Neutron Routers are networknamespaces with unique routing tables and iptables rules.
-------------------
4.Neutron-Metadat-Agent: Provides metadata services to instances.
------------------------
5.Neutron-Linuxbridge-Agent: Runs on each compute node in the environment.responsible for create and management of all network-related functions on the compute node.
----------------------------

2.Neutron on Controller Node:
--------------------------------

Neutron Installation Packages:
-------------------------------
# apt install neutron-server neutron-plugin-ml2 neutron-linuxbridge-agent 
  neutron-l3-agent neutron-dhcp-agent neutron-metadata-agent

Neutron configuration Files:
-----------------------------
# /etc/neutron/neutron.conf
# /etc/neutron/plugins/ml2/ml2_conf.ini
# /etc/neutron/plugins/ml2/linuxbridge_agent.ini 
# /etc/neutron/l3_agent.ini 
# /etc/neutron/dhcp_agent.ini 

Neutron Services:
-------------------
Alright, lets see which services need to be in running status on Controller, Compute and Neutron nodes.
On Controller node, make sure following command returns service status as “Running”:

# service nova-api status
# service neutron-server status
# service neutron-linuxbridge-agent status
# service neutron-dhcp-agent status
# service neutron-metadata-agent status
# service neutron-l3-agent status

Verify:
--------
# openstack network agent list

Logs:
-----
- Neutron-server logs: /var/log/neutron/server.log
- Neutron plugins & agents logs: /var/log/neutron/


/var/log/neutron/server.log > If you are unable to create networks or routers, this is the very first log file to check. It is located on Neutron/Network node.
/var/log/neutron/openvswitch-agent.log  > It is located on both Network and Compute nodes. If your virtual machines are failing to reach external network or virtual routers, you should check this file for identifying the exact errors.

/var/log/neutron/metadata-agent.log >  This file can be found on either Controller or Compute node. It stores common neutron errors with respect to metadata.
/var/log/neutron/vpn-agent.log > If you have VPN component of Neutron enabled, then this log file will store VPN related error logs. If your site-to-site VPNs are not working or you are having issues with IPSEC, this is the place to look for root cause of problem.

Troubleshooting:
----------------
- Show detailed output: set debug=True in /etc/neutron/neutron.conf
- See state of neutron agents running in the network and compute plane: run neutron agent-­list (as user with admin role)
- Show detailed output for Neutron Plugins & Agent logs: set debug=True in the appropriate agent or plugin INI file
- Check network configuration and ip namespace: ip -o addr
- Check ip namespace: ip netns
- Check OpenVSwitch bridges and ports: ovs-vsctl show
- Check OpenVSwitch datapath and packets: ovs-dpctl
- Packet analysis: tcpdump

3.Nova Service on Compute Node:
----------------------------------
Nova Installation Packages:
---------------------------
# apt install neutron-linuxbridge-agent

Configuration Files:
----------------------
# /etc/neutron/neutron.conf 

Services:
-----------
# service nova-compute status
# service neutron-linuxbridge-agent status
# systemctl status openvswitch.service
# systemctl status neutron-openvswitch-agent.service

Verify:
-------
# openstack network agent list

============================================================================================================================================================================================================================================
NetworkConcepts:
================
1.Network: 
----------
Its a virtual network or logical slice of physical network.
1.1.Tenant Network: its a private network.
-------------------
1.2.Provider Network: its a public network.instances get access to outside like internet.
---------------------
2.Subnet: its a ipv4 address block associated with a specific network. a subnet allows the assighnment of IP address to VM instance.
---------
3.port: its a VNIC entry and exit point of network traffic to VM.
--------
4.Security Group and Rules: it control the traffic to and from a port.by default all traffic is allowed out of an instance and nthg is allowed in.
----------------------------
5.Routers: routers are devices generated by L3-agents daemon and allow one to connect diff broadcast domains together.connect project to project.
-----------
======================================================================================================================================================================================================================================================
MANAGING NETWORKS:
===================
1.PROVIDER NETWORKS: External Network or public network
--------------------
Network Create:
---------------
# openstack network create <PROVIDER_NETWORK_NAME> --provider-network-type  <VLAN> --provider-physicial-network <VLAN> --provider-segment  <200> --external or --internal 

Provider: Physical_Network:it will describe physical interface used for this network.
Provider:Segment_id: VLANID,VXLAN VNI.
Provider:network_type: network types like FLAT,VLAN,VXLAN.
router:external: it will determine network is eligible for floating ip pool.  

SubnetCreate:
-------------
# openstack subnet create PROVIDER_SUBNET_NAME  --network PROVIDER_NETWORK_NAME  --subnet-range  192.168.200.0/24

Verify:
-------
# ip netns list 

list/show:
----------
# openstack network list 
# openstack network show <PROVIDER_NETWORK_NAME>

# openstack subnet list 
# openstack subnet show <PROVIDER_NETWORK_NAME>
=====================================================================================================================================================================================================================================
2.TENANT NETWORKS: private network
------------------
Network Create:
---------------
# openstack network create <TENANT_NETWORK_NAME>

Subnet Create:
--------------
# openstack subnet create <TENANT_NETWORK_NAME_SUBNET_NAME> --network  <TENANT_NETWORK_NAME> --subnet-range 192.168.200.0/24

Verify:
------
# ip netns list 

list/show:
----------
# openstack network list 
# openstack network show <TENANT_NETWORK_NAME>

# openstack subnet list 
# openstack subnet show <TENANT_NETWORK_NAME>
====================================================================================================================================================================================================================================================
3.PORTS:
--------
vNICS.

# openstack port create <TENANT_NETWORK_NAME_PORT_NAME> --network <TENANT_NETWORK_NAME>
==============================================================================================================================================================================================================================================================
4.UPDATING NETWORKS ATTRIBUTES:
-------------------------------
network attributes can be updated using openstack network set/unset command

Example:
-------
# openstack network set/unset <TENANT_NETWORK_NAME> --external or --internal or --share or --no-share or --description 
====================================================================================================================================================================================================================================================================
5.DELETING PORTS:
------------------
# openstack port delete <TENANT_NETWORK_NAME_PORT_NAME> 
===========================================================================================================================================================================================================================================================================
6.DELETING NETWORKS:
--------------------
# openstack network delete <TENANT_NETWORK_NAME>

==============================================================================================================================================================================================================================================================================
7.ROUTERS:
-----------
A router in openstack represents a virtual routing device that provides routing capabilities to directly connected networks.
To provide end to end connectivity to a vm a router must be connected to an external provider network.
-Three types of routers.
.Standalone
.High-Availability HA  --uses vrrp for redundancy
.Distributed DVR

Create Routers:
---------------
# openstack router create <ROUTER_NAME_STANDALONE>
# openstack router create <ROUTER_NAME_HA> --ha
# openstack router create <ROUTER_NAME_DVR> --distributed

Verify:
-------
when any router is created corresponding network namespaces is created by neutron-l3-agent service.

# ip netns list 

Attaching Networks to  Routers:
-------------------------------
# openstack router add subnet <ROUTER_NAME_STANDALONE> <TENANT_NETWORK_NAME_SUBNET_NAME>

Attaching Router to External Provider:
--------------------------------------
# openstack router set --external-gateway <PROVIDER_NETWORK_NAME> <ROUTER_NAME_STANDALONE>

Verify:
-------
# openstack port list --router ROUTER_NAME_or_ID
================================================================================================================================================================================================================================================================================
8.FLOATING IPS:
---------------
floating ips in openstack are static IPV4 addresses that are mapped to instances
its similar to Elastic IPS in AWS.

u need floating ip id & internal port name or ID 

# openstack port create <PROVIDER_NETWORK_NAME_PORT_NAME> --network <PROVIDER_NETWORK_NAME>

# openstack floating ip create --port  <PROVIDER_NETWORK_NAME_PORT_NAME> <PROVIDER_NETWORK_NAME>

# openstack floating ip associate <FLOATING_IP_NAME_or_ID>  <PORT_NAME_OR_ID>
=============================================================================================================================================================================================================================================================================
9.DELETING ROUTERS:
---------------------
Delete:
-------
# openstack router delete  <ROUTER_NAME_STANDALONE>
===================================================================================================================================================================================================================================================
10.MANAGING SECURITY GROUPS:
----------------------------
its a firewall rules 

CREATE SG GROUP:
----------------
# openstack security group create <SECURITY_GROUP_NAME>

Create SG Rule:
---------------
# openstack security group rule create <SECURITY_GROUP_NAME> --dst-port 80 --protocol tcp --ingress --remote-ip  0.0.0.0/0

# openstack security group rule create <SECURITY_GROUP_NAME> --dst-port 80 --protocol tcp --ingress --src-ip  0.0.0.0/0
=====================================================================================================================================================================================================================================================================
11.MANAGING LOAD BALANCERS:
----------------------------
Neutron includes a service known as LoadBalancers as-a-Service LBaaS. 
users can create LB that balances traffic to applications deployed across instances in the cloud. 
neutron relies on an opensource LoadBalancing package known as HAProxy to provide the LB Functionality.
============================================================================================================================================================================================================================================================================
